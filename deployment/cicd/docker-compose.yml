version: '3.7'

services:
  proxy_flow:
    image: dockerflow/docker-flow-proxy
    ports:
      - 80:80
      - 443:443
    networks:
      - proxy
    environment:
      - LISTENER_ADDRESS=swarm-listener
      - MODE=swarm
      - TIMEOUT_CLIENT=300
      - TIMEOUT_CONNECT=300
      - TIMEOUT_QUEUE=300
      - TIMEOUT_SERVER=300
      - TIMEOUT_HTTP_REQUEST=300
      - TIMEOUT_HTTP_KEEP_ALIVE=600
    deploy:
      mode: global

  swarm-listener:
    image: dockerflow/docker-flow-swarm-listener
    networks:
      - proxy
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - DF_NOTIFY_CREATE_SERVICE_URL=http://proxy_flow:8080/v1/docker-flow-proxy/reconfigure
      - DF_NOTIFY_REMOVE_SERVICE_URL=http://proxy_flow:8080/v1/docker-flow-proxy/remove
    deploy:
      placement:
        constraints: [ node.role == manager ]

  agent:
    image: portainer/agent
    environment:
      # REQUIRED: Should be equal to the service name prefixed by "tasks." when
      # deployed inside an overlay network
      AGENT_CLUSTER_ADDR: tasks.agent
      # AGENT_PORT: 9001
      # LOG_LEVEL: debug
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/lib/docker/volumes:/var/lib/docker/volumes
    networks:
      - agent_network
    deploy:
      mode: global
      placement:
        constraints: [node.platform.os == linux]

  portainer:
    image: portainer/portainer-ce:2.9.1
    command: -H tcp://tasks.agent:9001 --tlsskipverify
    volumes:
      - data:/data
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - 8000:8000
      - 9000:9000
    networks:
      - proxy
      - agent_network
    deploy:
      labels:
        - com.df.port.1=9000
        - com.df.notify=true
        - com.df.distribute=true
        - com.df.serviceDomain.1=portainer.dev.beehive.com
        - com.df.reqMode.1=http
      mode: replicated
      replicas: 1
      placement:
        constraints: [node.role == manager]

  shepherd:
    image: mazzolino/shepherd
    environment:
      TZ: 'US/Eastern'
      SLEEP_TIME: '5m'
      FILTER_SERVICES: 'label=com.beehive.project'
      WITH_INSECURE_REGISTRY: 'true'
      WITH_REGISTRY_AUTH: 'true'
      VERBOSE: 'true'
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    deploy:
      placement:
        constraints: [node.role == manager]


networks:
  proxy:
    external: true
  agent_network:
    external: true

volumes:
   data: